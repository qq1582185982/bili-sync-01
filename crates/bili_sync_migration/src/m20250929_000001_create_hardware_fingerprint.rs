use sea_orm_migration::prelude::*;

#[derive(DeriveMigrationName)]
pub struct Migration;

#[async_trait::async_trait]
impl MigrationTrait for Migration {
    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        manager
            .create_table(
                Table::create()
                    .table(HardwareFingerprint::Table)
                    .if_not_exists()
                    .col(
                        ColumnDef::new(HardwareFingerprint::Id)
                            .integer()
                            .not_null()
                            .auto_increment()
                            .primary_key(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::UserId)
                            .big_integer()
                            .not_null()
                            .unique_key(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::ConfigType)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuVendor)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuModel)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuDeviceId)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuDriverVersion)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuDirectxVersion)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::GpuAngleInfo)
                            .text()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::WebglVersion)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::WebglVendor)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::WebglRenderer)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::WebglShadingLanguageVersion)
                            .string()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::WebglExtensions)
                            .text()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::ScreenWidth)
                            .integer()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::ScreenHeight)
                            .integer()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::DevicePixelRatio)
                            .float()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::TimezoneOffset)
                            .integer()
                            .not_null(),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::CreatedAt)
                            .timestamp()
                            .not_null()
                            .default(Expr::current_timestamp()),
                    )
                    .col(
                        ColumnDef::new(HardwareFingerprint::LastUsedAt)
                            .timestamp()
                            .not_null()
                            .default(Expr::current_timestamp()),
                    )
                    .to_owned(),
            )
            .await?;

        // 创建用户ID索引
        manager
            .create_index(
                Index::create()
                    .if_not_exists()
                    .name("idx_hardware_fingerprint_user_id")
                    .table(HardwareFingerprint::Table)
                    .col(HardwareFingerprint::UserId)
                    .to_owned(),
            )
            .await?;

        Ok(())
    }

    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        manager
            .drop_table(Table::drop().table(HardwareFingerprint::Table).to_owned())
            .await
    }
}

#[derive(DeriveIden)]
enum HardwareFingerprint {
    Table,
    Id,
    UserId,
    ConfigType,
    GpuVendor,
    GpuModel,
    GpuDeviceId,
    GpuDriverVersion,
    GpuDirectxVersion,
    GpuAngleInfo,
    WebglVersion,
    WebglVendor,
    WebglRenderer,
    WebglShadingLanguageVersion,
    WebglExtensions,
    ScreenWidth,
    ScreenHeight,
    DevicePixelRatio,
    TimezoneOffset,
    CreatedAt,
    LastUsedAt,
}