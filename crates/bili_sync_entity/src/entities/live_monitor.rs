//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "live_monitor")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub upper_id: i64,
    pub upper_name: String,
    pub room_id: i64,
    pub short_room_id: Option<i64>,
    pub path: String,
    pub enabled: bool,
    pub check_interval: i32,
    pub quality: String,
    pub format: String,
    pub last_status: i32,
    pub last_check_at: Option<String>,
    pub created_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::live_record::Entity")]
    LiveRecord,
}

impl Related<super::live_record::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LiveRecord.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}