//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "live_record")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub monitor_id: i32,
    pub room_id: i64,
    pub title: Option<String>,
    pub start_time: String,
    pub end_time: Option<String>,
    pub file_path: Option<String>,
    pub file_size: Option<i64>,
    pub status: i32,
    pub segment_mode: bool,
    pub segment_count: i32,
    pub url_switch_count: i32,
    pub cdn_nodes: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::live_monitor::Entity",
        from = "Column::MonitorId",
        to = "super::live_monitor::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    LiveMonitor,
}

impl Related<super::live_monitor::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LiveMonitor.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}